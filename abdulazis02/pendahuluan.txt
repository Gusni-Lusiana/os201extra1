BAB 1 PENDAHULUAN

1. Latar Belakang

a. GnuPG

GnuPG merupakan perangkat lunak kriptografi gratis dari Proyek GNU yang membantu orang memastikan kerahasiaan, integritas, dan kepastian data mereka. 
Gratis. Ketika kita mengatakan gratis yang kita maksud adalah kebebasan, bukan harga. Anda bebas untuk menggunakannya, memodifikasinya, membaginya, mengotak-atiknya, dan belajar darinya. Perangkat lunak dimaksudkan untuk digunakan oleh orang-orang, dan orang berhak mendapatkan kebebasan.
Kriptografi. Kata kriptografi berasal dari dua kata Yunani, κρυπτός (dilafalkan kryptos, yang berarti tersembunyi) dan γράφω (diucapkan grapho, yang berarti menulis). Kriptografi adalah studi matematika tentang kode dan sandi.
Perangkat lunak. Yang ini sudah jelas.
Proyek GNU. Proyek GNU adalah kelompok yang bertujuan memberi orang kemampuan untuk melakukan semua komputasi dengan perangkat lunak bebas.
Kerahasiaan. Tidak seorang pun kecuali pihak yang berwenang harus dapat membaca data Anda.
Integritas. Seharusnya tidak mungkin mengutak-atik pesan tanpa terasa.
Jaminan. Suatu jaminan bukanlah jaminan. Tidak ada jaminan dalam hidup, dan perangkat lunak tidak berbeda. Jaminan hanya berarti ada alasan kuat untuk percaya diri terhadap sesuatu - di sini, itu berarti bahwa ketika GnuPG digunakan dengan benar, orang mungkin yakin bahwa data itu rahasia dan / atau memiliki integritas.
GnuPG dapat digunakan dengan sendirinya sebagai aplikasi command-line (mis., Untuk dijalankan di Terminal prompt atau command prompt Windows), atau diintegrasikan ke dalam klien email populer. Ini juga digunakan oleh beberapa klien perpesanan instan, seperti Psi.

GnuPG dapat dijalankan di sistem operasi di Microsoft Windows, Mac OS X, berbagai Unix gratis, AIX, Solaris, HPUX, OpenVMS, dan banyak lagi. Orang-orang bahkan bekerja untuk porting ke smartphone seperti Android.

b. ShareMemory

ShareMemory adalah fitur yang didukung oleh UNIX System V, termasuk Linux, SunOS dan Solaris. Satu proses harus secara eksplisit meminta area, menggunakan kunci, untuk dibagikan oleh proses lain. Proses ini akan disebut server. Semua proses lain, klien, yang mengetahui area bersama dapat mengaksesnya. 
Namun, tidak ada perlindungan untuk memori bersama dan setiap proses yang tahu itu dapat mengaksesnya secara bebas. Untuk melindungi memori bersama agar tidak diakses secara bersamaan oleh beberapa proses, protokol sinkronisasi harus disiapkan.

Segmen ShareMemory diidentifikasi oleh integer unik, ID ShareMemory. ShareMemory itu sendiri dijelaskan oleh struktur tipe shmid_ds dalam file header sys / shm.h. Untuk menggunakan file ini, file sys / types.h dan sys / ipc.h harus disertakan. Karena itu, program Anda harus mulai dengan baris-baris berikut:

#include <sys / types.h>
#include <sys / ipc.h>
#include <sys / shm.h>

Skema umum penggunaan ShareMemory adalah sebagai berikut:

Untuk server, itu harus dimulai sebelum klien. Server harus melakukan tugas-tugas berikut:
Mintalah ShareMemory dengan kunci memori dan hafalkan ID ShareMemory yang dikembalikan. Ini dilakukan oleh system call shmget ().
Lampirkan ShareMemory ini ke ruang alamat server dengan sistim panggilan sistem ().
Inisialisasi ShareMemory, jika perlu.
Lakukan sesuatu dan tunggu penyelesaian semua klien.
Lepaskan ShareMemory dengan system call shmdt ().
Hapus ShareMemory dengan shmctl panggilan sistem ().
Untuk bagian klien, prosedurnya hampir sama:
Mintalah memori bersama dengan kunci memori yang sama dan hafalkan ID memori bersama yang dikembalikan.
Lampirkan memori bersama ini ke ruang alamat klien.
Gunakan memori.
Lepaskan semua segmen memori yang dibagikan, jika perlu.
Keluar.
Pada beberapa halaman berikutnya, kami akan menjelaskan panggilan sistem ini dan penggunaannya.
