BAB 1 PENDAHULUAN

1. Latar Belakang

a. GnuPG

GnuPG adalah implementasi dari protokol OpenPGP, yang digunakan untuk enkripsi dan otentikasi. GnuPG digunakan untuk mengenkripsi email. Tapi, fungsi ini tidak hanya digunakan oleh individu untuk menjaga privasi mereka: aktivis politik bergantung padanya untuk mengatur kegiatan mereka, jurnalis mengandalkannya untuk melindungi sumber mereka, dan pengacara bergantung padanya untuk melindungi percakapan pengacara-klien. 

Namun, GnuPG tidak hanya digunakan untuk mengenkripsi email. GnuPG melindungi pembaruan perangkat lunak dari hampir semua sistem operasi berbasis perangkat lunak gratis termasuk Debian, Ubuntu, Red Hat, dan SUSE. Meskipun kurang umum di desktop, sistem ini memberi daya dua pertiga dari semua situs web, dan merupakan platform yang mendominasi yang digunakan dalam sektor komputasi awan. Itu berarti bahwa meskipun Anda tidak secara langsung menggunakan GnuPG, jika Anda menggunakan Internet, sebagian data pribadi Anda dilindungi oleh GnuPG

Dan, GnuPG digunakan untuk lebih banyak. Orang-orang menggunakannya untuk melindungi arsip data, seperti, cadangan. Distributor perangkat lunak menandatangani perangkat lunak mereka dengan itu sehingga pengguna dapat memverifikasi integritas salinan. Pengembang perangkat lunak menggunakannya untuk menandatangani komitmen mereka. Organisasi seperti Debian menggunakannya untuk mengamankan proses internal, seperti memastikan bahwa unggahan paket diotorisasi, bahwa suara sah, dan pengunduran diri adalah otentik. GnuPG digunakan untuk mengamankan dompet Bitcoin. Dan, GnuPG digunakan untuk menandatangani dokumen.


Sejarah GnuPG


Werner Koch memulai GnuPG pada tahun 1997. Tetapi akar GnuPG terletak pada PGP, sebuah program enkripsi yang awalnya ditulis oleh Phil Zimmermann pada tahun 1991. Zimmermann adalah seorang aktivis politik yang sudah lama, dan menulis PGP untuk memungkinkan para aktivis menyimpan pesan dengan aman di BBS. Meskipun kode sumber untuk PGP tersedia, itu bukan perangkat lunak gratis. Selanjutnya, karena penggunaan RSA untuk kriptografi kunci publik, dan IDEA untuk enkripsi simetris, PGP terbebani oleh paten. Sekitar tahun 1996, Richard Stallman, pendiri Free Software Foundation, mulai memohon kepada orang-orang untuk membuat pengganti gratis untuk PGP. Koch terinspirasi oleh pidato ini, dan mulai bekerja pada G10, sebagaimana ia awalnya menyebutnya, yang merupakan referensi ke Grundgesetz kesepuluh (artikel kesepuluh konstitusi Jerman), yang mengabadikan hak untuk komunikasi pribadi di Jerman. Karena referensi itu dianggap terlalu tidak jelas bahkan untuk sebagian besar orang Jerman, nama GNU Privacy Guard atau GnuPG, singkatnya, diadopsi segera setelah rilis awal. Pada 2017, Koch terus bekerja di GnuPG sebagai pengembang utama. Sejak awal, proyek ini tetap relatif kecil dalam hal jumlah kontributor. Tapi, baru pada tahun 2012 Koch menemukan dirinya bekerja sendiri di GnuPG. Sebelum itu, proyek menerima cukup dana untuk mempekerjakan beberapa pengembang. Namun pada tahun 2012, GnuPG mengalami krisis pendanaan, dan Koch terpaksa memberhentikan karyawan terakhirnya. Situasi pendanaan terus memburuk, dan pada 2014 Koch harus mengambil pekerjaan sampingan yang tidak terkait dengan GnuPG untuk menambah penghasilannya. Situasinya tidak berkelanjutan, dan Koch hampir menyerah. Tapi, teman-teman meyakinkannya untuk memberikan kampanye sumbangan satu tembakan terakhir. Responsnya luar biasa. Dia tidak hanya menerima cukup uang untuk mendanai dirinya sendiri, tetapi dia juga mendapatkan sumbangan kecil 250.000 euro, dan Stripe, Facebook, dan Linux Foundation masing-masing berkomitmen untuk menyumbang sekitar 50.000 euro per tahun. Seiring dengan beberapa kontrak yang tidak terduga sebagian dari BSI Jerman (Kantor Federal untuk Keamanan Informasi), Koch mampu merekrut lima pengembang tambahan. Sejak itu, pengembangan GnuPG telah dipercepat, dan fitur-fitur baru ditambahkan secara teratur. Misalnya, Koch mengembangkan protokol penemuan kunci baru yang disebut Web Key Directory (WKD), ada model kepercayaan baru berdasarkan TOFU, ada dukungan resmi untuk satu set pengikat Python, dan pengembang GnuPG secara aktif berkontribusi ke Enigmail.

GnuPG merupakan perangkat lunak kriptografi gratis dari Proyek GNU yang membantu orang memastikan kerahasiaan, integritas, dan kepastian data mereka. 
Gratis. Ketika kita mengatakan gratis yang kita maksud adalah kebebasan, bukan harga. Anda bebas untuk menggunakannya, memodifikasinya, membaginya, mengotak-atiknya, dan belajar darinya. Perangkat lunak dimaksudkan untuk digunakan oleh orang-orang, dan orang berhak mendapatkan kebebasan.
Kriptografi. Kata kriptografi berasal dari dua kata Yunani, κρυπτός (dilafalkan kryptos, yang berarti tersembunyi) dan γράφω (diucapkan grapho, yang berarti menulis). Kriptografi adalah studi matematika tentang kode dan sandi.
Perangkat lunak. Yang ini sudah jelas.
Proyek GNU. Proyek GNU adalah kelompok yang bertujuan memberi orang kemampuan untuk melakukan semua komputasi dengan perangkat lunak bebas.
Kerahasiaan. Tidak seorang pun kecuali pihak yang berwenang harus dapat membaca data Anda.
Integritas. Seharusnya tidak mungkin mengutak-atik pesan tanpa terasa.
Jaminan. Suatu jaminan bukanlah jaminan. Tidak ada jaminan dalam hidup, dan perangkat lunak tidak berbeda. Jaminan hanya berarti ada alasan kuat untuk percaya diri terhadap sesuatu - di sini, itu berarti bahwa ketika GnuPG digunakan dengan benar, orang mungkin yakin bahwa data itu rahasia dan / atau memiliki integritas.
GnuPG dapat digunakan dengan sendirinya sebagai aplikasi command-line (mis., Untuk dijalankan di Terminal prompt atau command prompt Windows), atau diintegrasikan ke dalam klien email populer. Ini juga digunakan oleh beberapa klien perpesanan instan, seperti Psi.

GnuPG dapat dijalankan di sistem operasi di Microsoft Windows, Mac OS X, berbagai Unix gratis, AIX, Solaris, HPUX, OpenVMS, dan banyak lagi. Orang-orang bahkan bekerja untuk porting ke smartphone seperti Android.

b. ShareMemory

ShareMemory adalah fitur yang didukung oleh UNIX System V, termasuk Linux, SunOS dan Solaris. Satu proses harus secara eksplisit meminta area, menggunakan kunci, untuk dibagikan oleh proses lain. Proses ini akan disebut server. Semua proses lain, klien, yang mengetahui area bersama dapat mengaksesnya. 
Namun, tidak ada perlindungan untuk memori bersama dan setiap proses yang tahu itu dapat mengaksesnya secara bebas. Untuk melindungi memori bersama agar tidak diakses secara bersamaan oleh beberapa proses, protokol sinkronisasi harus disiapkan.

Segmen ShareMemory diidentifikasi oleh integer unik, ID ShareMemory. ShareMemory itu sendiri dijelaskan oleh struktur tipe shmid_ds dalam file header sys / shm.h. Untuk menggunakan file ini, file sys / types.h dan sys / ipc.h harus disertakan. Karena itu, program Anda harus mulai dengan baris-baris berikut:

#include <sys / types.h>
#include <sys / ipc.h>
#include <sys / shm.h>

Skema umum penggunaan ShareMemory adalah sebagai berikut:

Untuk server, itu harus dimulai sebelum klien. Server harus melakukan tugas-tugas berikut:
Mintalah ShareMemory dengan kunci memori dan hafalkan ID ShareMemory yang dikembalikan. Ini dilakukan oleh system call shmget ().
Lampirkan ShareMemory ini ke ruang alamat server dengan sistim panggilan sistem ().
Inisialisasi ShareMemory, jika perlu.
Lakukan sesuatu dan tunggu penyelesaian semua klien.
Lepaskan ShareMemory dengan system call shmdt ().
Hapus ShareMemory dengan shmctl panggilan sistem ().
Untuk bagian klien, prosedurnya hampir sama:
Mintalah memori bersama dengan kunci memori yang sama dan hafalkan ID memori bersama yang dikembalikan.
Lampirkan memori bersama ini ke ruang alamat klien.
Gunakan memori.
Lepaskan semua segmen memori yang dibagikan, jika perlu.
Keluar.
Pada beberapa halaman berikutnya, kami akan menjelaskan panggilan sistem ini dan penggunaannya.
